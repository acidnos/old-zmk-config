/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        OSX_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        LOWER_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp NON_US_BACKSLASH  &kp N1      &kp N2             &kp N3        &kp N4      &kp N5        &kp N6      &kp N7                 &kp N8        &kp N9                &kp N0               &kp DEL
&kp TAB               &kp LS(N1)  &kp LS(N2)         &kp LS(N3)    &kp LS(N4)  &kp LS(N5)    &kp LS(N6)  &kp LS(N7)             &kp LS(N8)    &kp LS(N9)            &kp LS(MINUS)        &kp SINGLE_QUOTE
&kp LSHFT             &trans      &kp RIGHT_BRACKET  &kp KP_EQUAL  &kp RA(N3)  &kp RA(N2)    &kp GRAVE   &kp RA(RIGHT_BRACKET)  &kp RA(LBKT)  &kp RA(SINGLE_QUOTE)  &kp RA(NON_US_HASH)  &kp RSHIFT
                                                     &kp LGUI      &trans      &kp SPACE     &kp RET     &mo 3                  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC       &kp F1      &kp F2        &kp F3        &kp F4   &kp F5       &none          &none           &kp UP_ARROW  &kp LPAR         &kp RPAR   &kp BSPC
&kp CAPSLOCK  &kp F6      &kp F7        &kp F8        &kp F9   &kp F10      &none          &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &kp PG_UP  &kp HOME
&kp LSHFT     &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp F11  &kp F12      &kp LG(SPACE)  &kp LC(LEFT)    &kp LC(UP)    &kp LC(RIGHT)    &kp PG_DN  &kp END
                                        &kp LGUI      &mo 3    &kp SPACE    &kp RET        &trans          &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
